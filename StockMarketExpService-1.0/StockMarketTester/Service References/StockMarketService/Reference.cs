//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockMarketTester.StockMarketService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockMarketService.IStockExpService")]
    public interface IStockExpService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExpService/GetValuesfromDB", ReplyAction="http://tempuri.org/IStockExpService/GetValuesfromDBResponse")]
        float[] GetValuesfromDB(int highdays, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExpService/GetValuesfromDB", ReplyAction="http://tempuri.org/IStockExpService/GetValuesfromDBResponse")]
        System.Threading.Tasks.Task<float[]> GetValuesfromDBAsync(int highdays, string date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExpService/CalCulateAverage", ReplyAction="http://tempuri.org/IStockExpService/CalCulateAverageResponse")]
        System.Collections.Generic.KeyValuePair<float, float> CalCulateAverage(int lowerDay, int highdays, float[] dbvalues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExpService/CalCulateAverage", ReplyAction="http://tempuri.org/IStockExpService/CalCulateAverageResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<float, float>> CalCulateAverageAsync(int lowerDay, int highdays, float[] dbvalues);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExpService/GetResult", ReplyAction="http://tempuri.org/IStockExpService/GetResultResponse")]
        int GetResult(float niftyvalue, float avg1, float avg2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExpService/GetResult", ReplyAction="http://tempuri.org/IStockExpService/GetResultResponse")]
        System.Threading.Tasks.Task<int> GetResultAsync(float niftyvalue, float avg1, float avg2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockExpServiceChannel : StockMarketTester.StockMarketService.IStockExpService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockExpServiceClient : System.ServiceModel.ClientBase<StockMarketTester.StockMarketService.IStockExpService>, StockMarketTester.StockMarketService.IStockExpService {
        
        public StockExpServiceClient() {
        }
        
        public StockExpServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockExpServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockExpServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockExpServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public float[] GetValuesfromDB(int highdays, string date) {
            return base.Channel.GetValuesfromDB(highdays, date);
        }
        
        public System.Threading.Tasks.Task<float[]> GetValuesfromDBAsync(int highdays, string date) {
            return base.Channel.GetValuesfromDBAsync(highdays, date);
        }
        
        public System.Collections.Generic.KeyValuePair<float, float> CalCulateAverage(int lowerDay, int highdays, float[] dbvalues) {
            return base.Channel.CalCulateAverage(lowerDay, highdays, dbvalues);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<float, float>> CalCulateAverageAsync(int lowerDay, int highdays, float[] dbvalues) {
            return base.Channel.CalCulateAverageAsync(lowerDay, highdays, dbvalues);
        }
        
        public int GetResult(float niftyvalue, float avg1, float avg2) {
            return base.Channel.GetResult(niftyvalue, avg1, avg2);
        }
        
        public System.Threading.Tasks.Task<int> GetResultAsync(float niftyvalue, float avg1, float avg2) {
            return base.Channel.GetResultAsync(niftyvalue, avg1, avg2);
        }
    }
}
